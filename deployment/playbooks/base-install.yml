---
- hosts: all
  tasks:
#    - name: Check SSH known_hosts for {{ inventory_hostname }}
#      local_action: shell ssh-keygen -F {{ inventory_hostname }}
#      register: checkForKnownHostsEntry
#      failed_when: false
#      changed_when: false
#      ignore_errors: yes
#    - name: Add {{ inventory_hostname }} to SSH known hosts automatically
#      when: checkForKnownHostsEntry.rc == 1
#      changed_when: checkForKnownHostsEntry.rc == 1
#      set_fact:
#          ansible_ssh_common_args: '-o StrictHostKeyChecking=no'

    - name: Test for enable_web
      when: enable_web is not defined
      set_fact:
        enable_web: "no"

    - name: Set messagebus zmq when not defined
      when: messagebus is not defined
      set_fact:
          messagebus: "zmq"

    - name: Install base software for volttron
      become: yes
      become_method: sudo
      apt:
        update_cache: yes
        name: "{{item}}"
        state: present
      loop:
          - "build-essential"
          - "git"
          - "python3.6-dev"
          - "python3-venv"
          - "libssl-dev"
          - "libevent-dev"

    - name: Installing extra system level things for rabbit.
      become: yes
      become_method: sudo
      when: messagebus == "rmq"
      apt:
        update_cache: yes
        name: "{{item}}"
        state: present
      loop:
          - "apt-transport-https"
          - "libwxbase3.0-0v5"
          - "libwxgtk3.0-0v5"
          - "libsctp1"

    - name: Adding apt_key for erlang solutions
      become: yes
      become_method: sudo
      when: messagebus == "rmq"
      apt_key:
        url: https://packages.erlang-solutions.com/ubuntu/erlang_solutions.asc
        state: present

    - name: Adding apt repo for erlang
      become: yes
      become_method: sudo
      when: messagebus == "rmq"
      apt_repository:
        update_cache: yes
        repo: deb https://packages.erlang-solutions.com/ubuntu bionic contrib
        state: present
        filename: erlang.solutions.list

    - name: Install erlang requirements
      become: yes
      become_method: sudo
      when: messagebus == "rmq"
      apt:
        update_cache: yes
        name: "{{item}}"
        state: present
      loop:
        - "erlang-base"
        - "erlang-diameter"
        - "erlang-eldap"
        - "erlang-ssl"
        - "erlang-crypto"
        - "erlang-asn1"
        - "erlang-public-key"
        - "erlang-nox"

    - name: Checkout volttron from repository
      git:
        repo: "https://github.com/VOLTTRON/volttron"
        dest: "~/volttron"
        version: "develop"
        update: "no"

    - name: Bootstrap the python3 environment if necessary
      command:
        cmd: "python3 bootstrap.py"
        chdir: "~/volttron"
        creates: "~/volttron/env"

    - name: Test if pika installed
      raw: "cd ~/volttron && env/bin/pip list --disable-pip-version-check --format legacy| grep -F gevent-pika | wc -l"
      args:
        chdir: "~/volttron"
      register: already_installed_pika

    - name: Boostrap rmq environment
      when: (messagebus == "rmq" and "0" in already_installed_pika.stdout)
      command:
        cmd: "env/bin/python bootstrap.py --rabbitmq"
        chdir: "~/volttron"

    - name: Test if pika installed
      raw: "cd ~/volttron && env/bin/pip list --disable-pip-version-check --format legacy| grep -F ws4py | wc -l"
      args:
        chdir: "~/volttron"
      register: web_enabled

    - name: Enabling web packages for environment
      when: (enable_web == 'yes' and "0" in web_enabled.stdout)
      command:
        cmd: "env/bin/python bootstrap.py --web"
        chdir: "~/volttron"


